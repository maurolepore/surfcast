use_package("httr2")
use_r("scrape")
"https://www.surf-forecast.com/"
base_url <- function() {
"https://www.surf-forecast.com/"
}
use_test()
devtools:::test_active_file()
devtools::load_all(".")
countries <- function() {
base_url() %>%
httr2::req_url_path_append("countries") %>%
httr2::request()
}
request_countries <- function() {
base_url() %>%
httr2::req_url_path_append("countries") %>%
httr2::request()
}
request("lala")
httr2:request("lala")
httr2::request("lala")
x <- httr2::request("lala")
class(x)
devtools:::test_active_file()
devtools::load_all(".")
devtools:::test_active_file()
out <- request_countries()
base_url <- function() {
"https://www.surf-forecast.com/"
}
base_url <- function() {
"https://www.surf-forecast.com"
}
base_url() %>%
httr2::req_url_path_append("countries")
devtools:::test_active_file()
base_url() %>%
httr2::request()
base_url() %>%
httr2::request() %>%
httr2::req_url_path_append("countries")
devtools::load_all(".")
devtools::load_all(".")
devtools:::test_active_file()
devtools:::test_active_file()
devtools:::test_active_file()
library(httr2)
req <- request_countries()
req <- req_perform()
req <- request_countries()
req <- req_perform()
req <- httr2::req_perform()
req <- request_countries()
req <- httr2::req_perform()
req <- req %>% httr2::req_perform()
req
req <- req %>% httr2::req_perform() %>% resp_body_html()
req <- request_countries()
req <- req %>%
httr2::req_perform() %>%
httr2::resp_body_html()
req
get_html <- function(req) {
req <- req %>%
httr2::req_perform() %>%
httr2::resp_body_html()
}
devtools:::test_active_file()
out <- request_countries() %>%
get_html()
out
class(get_html <- function(req) {
req %>%
httr2::req_perform() %>%
httr2::resp_body_html()
}
)
class(out)
devtools:::test_active_file()
class(out)
out
out$node
test_that("outputs an xml_document", {
out <- get_html(request_countries())
expect_s3_class(out, "xml_document")
})
out <- get_html(request_countries())
out <- get_html(request_countries())
out %>%
rvest::html_elements(".desktop-country-index")
out %>%
rvest::html_elements(".desktop-country-index") %>%
rvest::html_text2()
out <- get_html(request_countries())
out %>%
# rvest::html_elements(".desktop-country-index") %>%
rvest::html_elements("#contdiv a") %>%
rvest::html_text2()
out <- request_countries() %>%
get_html() %>%
countries()
devtools::load_all(".")
out <- request_countries() %>%
get_html() %>%
countries()
devtools::load_all(".")
devtools:::test_active_file()
out <- request_countries() %>%
get_html() %>%
countries()
expect_is(out, "character")
test_that("outputs countries", {
out <- request_countries() %>%
get_html() %>%
countries()
expect_snapshot(out)
})
test_that("outputs an xml_document", {
out <- get_html(request_countries())
expect_s3_class(out, "xml_document")
})
test_that("outputs a request", {
out <- request_countries()
expect_s3_class(out, "httr2_request")
})
devtools:::test_active_file()
devtools:::test_active_file()
use_data_raw()
out <- request_countries() %>%
get_html() %>%
countries()
countries <- request_countries() %>%
get_html() %>%
countries()
base_url() %>%
httr2::request() %>%
httr2::req_url_path_append("countries")
base_url() %>%
httr2::request() %>%
httr2::req_url_path_append("countries")
request_breaks <- function(country) {
base_url() %>%
httr2::request() %>%
httr2::req_url_path_append("countries") %>%
httr2::req_url_path_append(country) %>%
httr2::req_url_path_append("breaks")
}
request_breaks("Argentina")
out <- request_breaks("Argentina")
out
as.character(out)
as.character(out)[[1]]
expect_snapshot(out)
devtools:::test_active_file()
devtools::load_all(".")
devtools::load_all(".")
devtools:::test_active_file()
countries <- request_countries() %>%
get_html() %>%
countries()
use_r("utils")
use_package("here")
data_raw <- function(...) {
here::here("data-raw", ...)
}
fs::dir_create(data_raw("surf-spots"))
data_raw("surf-spots")
countries
seq_along(countries)
i <- 1
req <- countries[[i]] %>% request_countries()
req
countries[[i]]
countries <- request_countries() %>%
get_html() %>%
countries() %>%
sort()
fs::dir_create(data_raw("surf-spots"))
req <- request_countries(countries[[i]])
countries[[i]]
request_countries(countries[[i]])
req <- request_breaks(countries[[i]])
req
req <- request_breaks(countries[[i]])
req
req %>% httr2::perfom()
req %>% httr2::req_perfom()
req %>% httr2::req_perform()
req
use_package("rvest")
html <- req %>%
httr2::req_perform() %>%
httr2::resp_body_html()
html
resp <- httr2::req_perform(req)
req <- request_breaks(countries[[i]])
resp <- httr2::req_perform(req)
resp
qs::qsave(resp, data_raw("surf-spots", glue::glue("{country}.qs")))
qs::qsave(resp, data_raw("surf-spots", glue::glue("{countries[[i]]}.qs")))
countries <- request_countries() %>%
get_html() %>%
countries() %>%
sort()
fs::dir_create(data_raw("surf-spots"))
for (i in seq_along(countries)) {
req <- request_breaks(countries[[i]])
resp <- httr2::req_perform(req)
qs::qsave(resp, data_raw("surf-spots", glue::glue("{countries[[i]]}.qs")))
}
length(countries)
data_raw("countries", glue::glue("{countries[[i]]}.qs"))
path <- data_raw("countries", glue::glue("{countries[[i]]}.qs"))
path
fs::file_exists(path)
countries <- request_countries() %>%
get_html() %>%
countries() %>%
sort()
fs::dir_create(data_raw("countries"))
for (i in seq_along(countries)) {
path <- data_raw("countries", glue::glue("{countries[[i]]}.qs"))
if (!fs::file_exists(path)) {
req <- request_breaks(countries[[i]])
resp <- httr2::req_perform(req)
qs::qsave(resp, data_raw("countries", glue::glue("{countries[[i]]}.qs")))
}
}
path
path %>% fs:::path_dir()
path %>% fs:::path_dir() %>% fs::dir_ls() %>% length()
fs::dir_ls(path)
path
fs::dir_ls(fs::path_dir(path))
fs::path_file(fs::dir_ls(fs::path_dir(path)))
fs::dir_ls(fs::path_dir(path))
paths <- fs::dir_ls(fs::path_dir(path))
paths
countries
paths
fs::dir_ls(fs::path_dir(path))
fs::path_ext_remove(fs::path_file(fs::dir_ls(fs::path_dir(path))))
scraped <- fs::path_ext_remove(fs::path_file(fs::dir_ls(fs::path_dir(path))))
setdiff(1:3, 2)
setdiff(countries, scraped)
countries
scraped
countries
setdiff(scraped, countries)
setdiff(scraped, countries)
setdiff(countries, scraped)
setdiff(scraped, countries)
setdiff(countries, scraped)
scraped
countries
unique(countries)
request_countries() %>%
get_html() %>%
countries()
countries <- request_countries() %>%
get_html() %>%
countries() %>%
unique() %>%
sort()
devtools::load_all(".")
devtools:::test_active_file()
snapshot_accept()
source("~/git/surfcast/data-raw/request_surf-spots.R", echo=TRUE)
devtools::load_all()
paths <- data_raw("data-raw", "countries")
paths
fs::dir_ls(paths)
paths <- data_raw("data-raw", "countries")
fs::dir_ls(paths)
paths <- data_raw("countries")
paths <- data_raw("countries")
fs::dir_ls(paths)
i <- 1
req <- qs::qread(paths[[i]])
paths[[i]]
paths <- fs::dir_ls(data_raw("countries"))
req <- qs::qread(paths[[i]])
req
html <- req %>%
httr2::resp_body_html()
html
html %>%
rvest::html_elements("td")
rvest::html_text2()
html %>%
rvest::html_elements("td") %>%
rvest::html_text2()
html %>%
rvest::html_elements("td") %>%
rvest::html_elements("tr") %>%
rvest::html_text2()
html %>%
rvest::html_elements("td > a") %>%
rvest::html_text2()
req <- qs::qread(paths[[i]])
html <- req %>%
httr2::resp_body_html()
html %>%
rvest::html_elements("td > a") %>%
rvest::html_text2()
paths[[i]]
i <- 2
paths[[i]]
req <- qs::qread(paths[[i]])
html <- req %>%
httr2::resp_body_html()
html
html %>%
rvest::html_elements("td > a") %>%
rvest::html_text2()
html %>%
rvest::html_elements("a") %>%
rvest::html_text2()
req
req <- qs::qread(paths[[1]])
req
qs::qread(paths[[1]])
qs::qread(paths[[2]])
countries
request_breaks(countries[[i]])
req <- request_breaks(countries[[i]])
req
resp <- httr2::req_perform(req)
resp
req
httr2::req_perform(req)
resp
req
httr2::req_dry_run(req)
resp <- httr2::req_perform(req)
resp
req <- request_breaks(countries[[30]])
req
req <- request_breaks(countries[[40]])
req <- request_breaks(countries[[40]])
req <- request_breaks(countries[[100]])
req
req <- request_breaks(countries[[200]])
req <- request_breaks(countries[[180]])
req
base_url()
library(httr2)
base_url() %>%
request()
req <- request(base_url())
breaks_req <- req_url_path_append("breaks")
req <- request(base_url())
breaks_req <- req_url_path_append("breaks")
breaks_req <- req %>% req_url_path_append("breaks")
breaks_req <- req %>% req_url_path_append("breaks")
breaks_req
breaks_resp <- breaks_req %>% req_perform()
breaks_resp
breaks_htlm <- breaks_resp %>% resp_body_html()
breaks_htlm
braks_resp
library(pins)
# pin?
pins::board_folder(fs::dir_create(data_raw("requests")))
# pin?
board <- pins::board_folder(fs::dir_create(data_raw("requests")))
board %>% pin_write(breaks_resp, "breaks")
board %>% pin_write(breaks_resp, "breaks", type = "qs")
board %>% pin_read("breaks")
board %>% pin_read("breaks")
breaks_resp %>% pin_read("breaks")
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
breaks_htlm <- breaks_resp %>% resp_body_html()
breaks_htlm
cache <- fs::dir_create(data_raw("requests"))
req <- request(base_url()) %>% req_cache(cache, debug = TRUE)
breaks_req <- req %>% req_url_path_append("breaks")
breaks_req <- req %>% req_url_path_append("breaks")
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("requests")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
board <- board_folder(fs::dir_create(data_raw("cache")))
cache <- fs::dir_create(data_raw("cache"))
board <- board_folder(fs::dir_create(data_raw("pins-cache")))
board <- board_folder(fs::dir_create(data_raw("httr2-cache")))
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
cache <- fs::dir_create(data_raw("cache_httr2"))
req <- request(base_url()) %>% req_cache(cache, debug = TRUE)
# https://www.surf-forecast.com/breaks
library(fs)
library(httr2)
library(pins)
cache <- fs::dir_create(data_raw("cache_httr2"))
req <- request(base_url()) %>% req_cache(cache, debug = TRUE)
breaks_req <- req %>% req_url_path_append("breaks")
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
breaks_htlm <- breaks_resp %>% resp_body_html()
breaks_resp
# https://www.surf-forecast.com/breaks
library(fs)
library(httr2)
library(pins)
cache <- fs::dir_create(data_raw("cache_httr2"))
req <- request(base_url()) %>% req_cache(cache, debug = TRUE)
breaks_req <- req %>% req_url_path_append("breaks")
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
breaks_htlm <- breaks_resp %>% resp_body_html()
breaks_resp
req
req %>% httr2::resp_raw()
req %>% httr2::req_dry_run()
breaks_req %>% resp_headers()
breaks_resp %>% resp_headers()
breaks_req <- req %>% req_url_path_append("breaks")
breaks_resp <- breaks_req %>% req_perform()
breaks_resp
spots <- breaks_resp %>%
rvest::html_elements(".rem , .list_table a")
breaks_resp
breaks_htlm <- breaks_resp %>% resp_body_html()
spots <- breaks_htlm %>%
rvest::html_elements(".rem , .list_table a")
spots
spots <- breaks_htlm %>%
rvest::html_elements(".rem , .list_table a") %>%
rvest::html_text2()
spots
spots
spots <- breaks_htlm %>%
# rvest::html_elements(".rem , .list_table a") %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spots
countries <- breaks_htlm %>%
# rvest::html_elements(".rem , .list_table a") %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
countries
breaks_htlm %>%
rvest::html_elements(".list_table a")
breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
countries <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spots <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
breaks_htlm <- breaks_resp %>% resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
country_spot <- tibble::tibble(country, spot)
country_spot
enframe_country_spot <- function(breaks_resp) {
breaks_htlm <- breaks_resp %>% resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
country_spot <- tibble::tibble(country, spot)
}
breaks_resp
breaks_resp
request_braks_page <- function(n) {
breaks_req <- req %>%
req_url_path_append("breaks") %>%
req_url_query(page = n)
}
request_braks_page <- function(n) {
req %>%
req_url_path_append("breaks") %>%
req_url_query(page = n)
}
breaks_req <- request_braks_page(1)
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
enframe_country_spot <- function(breaks_resp) {
breaks_htlm <- breaks_resp %>%
resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
country_spot <- tibble::tibble(country, spot)
}
enframe_country_spot(breaks_resp)
tibble::tibble(country, spot)
enframe_country_spot <- function(breaks_resp) {
breaks_htlm <- breaks_resp %>%
resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
tibble::tibble(country, spot)
}
enframe_country_spot(breaks_resp)
country_spot <- enframe_country_spot(breaks_resp)
country_spot
n <- 1L
breaks_req <- request_braks_page(n = n)
n <- 1L
breaks_req <- request_braks_page(n = n)
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
enframe_country_spot <- function(breaks_resp) {
breaks_htlm <- breaks_resp %>%
resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
tibble::tibble(country, spot)
}
country_spot <- enframe_country_spot(breaks_resp)
path <- pins::pin_write(board, glue::glue("country_spot_{n}"))
qs::qsave(country_spot, path)
country_spot
path <- pins::pin_write(board, glue::glue("country_spot_{n}"))
path <- board %>% pin_write(country_spot, glue::glue("country_spot_{n}"))
qs::qsave(country_spot, path)
path <- board %>% pin_write(country_spot, glue::glue("country_spot_{n}"))
country_spot <- enframe_country_spot(breaks_resp)
board %>% pin_write(country_spot, glue::glue("country_spot_{n}"))
source("~/git/surfcast/data-raw/cache-country_spot.R", echo=TRUE)
library(pins)
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board
board %>%
pins_read("cache_pins_1")
library(pins)
board %>%
pin_read("country_spot_1")
country_spot <- board %>%
pin_read("country_spot_1")
country_spot <- board %>%pin_read("country_spot_1")
country_spot
library(dplyr)
country_spot %>%
filter(grepl("remire", country, ignore.case = TRUE))
country_spot %>%
filter(grepl("remir", country, ignore.case = TRUE))
country_spot %>%
filter(grepl("french", country, ignore.case = TRUE))
country_spot %>%
filter(grepl("french guiand", country, ignore.case = TRUE))
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE))
country_spot
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE))
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("(.*$", "", .data$spot)
)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\(.*$", "", .data$spot)
)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot)
)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot)
)
stringi::stri_enc_toascii()
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
spot = stringi::stri_enc_toascii(.data$spot)
)
stringi::stri_enc_list()
stringi::stri_enc_list(simplify = FALSE)
?stringr::str_conv
# Example from encoding?stringi::stringi
x <- rawToChar(as.raw(177))
x
str_conv(x, "ISO-8859-2") # Polish "a with ogonek"
str_conv(x, "ISO-8859-1")
library(tidyverse)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
spot = stringi::stri_enc_toascii(.data$spot)
)
# Example from encoding?stringi::stringi
x <- rawToChar(as.raw(177))
x
str_conv(x, "ISO-8859-2") # Polish "a with ogonek"
str_conv(x, "ISO-8859-1")
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
# spot = stringi::stri_enc_toascii(.data$spot)
spot = stringr::str_conv(.data$spot, "ISO-8859-1")
)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
spot = stringi::stri_enc_toascii(.data$spot)
# spot = stringr::str_conv(.data$spot, "ISO-8859-1")
)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot)
)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub(" ", "-", .data$spot),
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot)
)
country_spot %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
spot = gsub(" ", "-", .data$spot)
)
sanitize_spot <- function(data) {
data %>%
filter(grepl("french guiana", country, ignore.case = TRUE)) %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
spot = gsub(" ", "-", .data$spot)
)
}
sanitize_spot(country_spot)
sanitize_spot <- function(data) {
data %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
spot = gsub(" ", "-", .data$spot)
)
}
country_spot <- board %>%pin_read("country_spot_1")
sanitize_spot(country_spot)
country_spot <- sanitize_spot(country_spot)
country_spot
sanitize_spot <- function(data) {
data %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
spot = gsub(" ", "-", .data$spot)
)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
country_spot <- board %>%pin_read("country_spot_1")
country_spot <- sanitize_spot(country_spot)
library(httr2)
req <- request(base_url())
req
req <- request(base_url())
req %>% req_url_path_append("breaks")
req_url_path_append("breaks")
req %>% req_url_path_append("breaks")
country_spot
req %>%
req_url_path_append("breaks") %>%
req_url_path_append("Alfonsina")
spot <- "Alfonsina"
# TODO: Generalize
spot <- "Alfonsina"
req <- request(base_url())
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
req_spot
resp_spot <- req_spot %>% req_perform()
resp_spot
html_spot <- req_spot %>% resp_body_html()
resp_spot <- req_spot %>% req_perform()
html_spot <- resp_spot %>% resp_body_html()
html_spot
rvest::html_text2()
resp_spot %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
resp_spot %>%
rvest::html_elements(".guide-page__best-month")
resp_spot
html <- resp_spot %>% resp_body_html()
resp_spot <- req_spot %>% req_perform()
html <- resp_spot %>% resp_body_html()
html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
html %>%
rvest::html_elements(".guide-page__gradient") %>%
rvest::html_text2()
html %>%
rvest::html_elements(".guide-page__best-month")
html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month
best_month_season <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month_season
gsub("(Best Season: )", "", best_month_season)
gsub("(.*)(Best Season: )(.*)", "\\1", best_month_season)
gsub("(.*)(Best Season: )(.*)", "\\2", best_month_season)
gsub("(.*)(Best Season: )(.*)", "\\3", best_month_season)
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_month
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
best_season
best_month
sanitize_spot <- function(data) {
data %>%
mutate(
spot = gsub("\\(.*$", "", .data$spot),
spot = trimws(.data$spot),
spot = gsub(" ", "-", .data$spot)
)
}
scrape_best_time <- function(resp_spot) {
html <- resp_spot %>% resp_body_html()
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
country_spot <- board %>%pin_read("country_spot_1")
country_spot <- sanitize_spot(country_spot)
# TODO: Generalize
spot <- "Alfonsina"
req <- request(base_url())
spot <- "Alfonsina"
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
spot
resp_spot <- req_spot %>% req_perform()
resp_spot <- req_spot %>% req_perform()
resp_spot
country_spot <- board %>% pin_read("country_spot_1")
country_spot
board %>% pin_write(req_spot, spot)
req_spot <- board %>% pin_read(spot)
req_spot
resp_spot <- req_spot %>% req_perform()
resp_spot
scrape_best_time(resp_spot)
tibble::tibble(best_month, best_season)
scrape_best_time <- function(resp_spot) {
html <- resp_spot %>% resp_body_html()
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_time(resp_spot)
resp_spot %>%
rvest::html_elements(".guide-page__surfinfo")
html_spot %>%
rvest::html_elements(".guide-page__surfinfo")
html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2()
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2()
spot_stats
spot_stats %>% strsplit("\n")
spot_stats %>% strsplit("\n") %>% lapply(setNames)
spot_stats %>%
strsplit("\n") %>%
purrr::map(~rlang::set_names(.x[[2]], .x[[2]])))
spot_stats %>%
strsplit("\n") %>%
purrr::map(~rlang::set_names(.x[[2]], .x[[2]]))
spot_stats %>%
strsplit("\n") %>%
purrr::map(~rlang::set_names)
spot_stats %>%
strsplit("\n") %>%
purrr::map(rlang::set_names)
spot_stats
spot_stats %>%
strsplit("\n")
spot_stats %>%
strsplit("\n") %>%
purrr::map(~rlang::set_names(.x[[1]]))
spot_stats %>%
strsplit("\n") %>%
purrr::map(~rlang::set_names(.x[[1]], .x[[2]]))
spot_stats %>%
strsplit("\n") %>%
purrr::map(~rlang::set_names(.x[[2]], .x[[1]]))
spot_stats %>%
strsplit("\n") %>%
purrr::map(janitor::make_clean_names)
spot_stats %>%
strsplit("\n") %>%
purrr::map(~janitor::make_clean_names(.x[[1]]))
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
spot_stats
spot_stats %>%
purrr::map(~janitor::make_clean_names(.x[[1]]))
spot_stats %>% purrr::map(~janitor::make_clean_names(.x[[1]]))
nms <- spot_stats %>% purrr::map(~janitor::make_clean_names(.x[[1]]))
nms
name <- spot_stats %>% purrr::map(~janitor::make_clean_names(.x[[1]]))
spot_stats
name <- spot_stats %>% purrr::map(1)
name
value <- spot_stats %>% purrr::map(2)
value
name
name <- spot_stats %>% purrr::map(1) %>% purrr::map(janitor::make_clean_names)
name
value <- spot_stats %>% purrr::map(2) %>% purrr::map(gsub("%", "", .x))
value <- spot_stats %>% purrr::map(2) %>% purrr::map(~gsub("%", "", .x))
value
value <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.double()
value <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
name <- spot_stats %>% purrr::map(1) %>% purrr::map(janitor::make_clean_names)
value <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
name
value
tibble(name, value)
tibble::tibble(name, value)
name <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
value <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(name, value)
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(condition)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider("condition")
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition)
condition
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(id_cols = condition)
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = contidion)
tibble::tibble(condition, percent)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(id_cols = condition)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = .data$condition)
tibble::tibble(condition, percent)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = .data$percent)
data <- tibble::tibble(condition, percent)
data
data %>% tidyr::pivot_wider(names_from = .data$percent)
fish_encounters
fish_encounters
fish_encounters %>%
pivot_wider(names_from = station, values_from = seen)
data
data %>% tidyr::pivot_wider(
names_from = condition
values_from = percent
)
data %>% tidyr::pivot_wider(
names_from = condition,
values_from = percent
)
data <- tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(
names_from = condition,
values_from = percent
)
data <- tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(
names_from = condition,
values_from = percent
) %>%
mutate(spot = spot)
data
data <- tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(
names_from = condition,
values_from = percent
) %>%
mutate(spot = spot) %>%
relocate(spot)
data
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(
names_from = condition,
values_from = percent
) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot)
scrape_best_time(resp_spot)
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
country_spot <- board %>% pin_read("country_spot_1")
country_spot <- sanitize_spot(country_spot)
req <- request(base_url())
spot <- "Alfonsina"
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
board %>% pin_write(req_spot, spot)
req_spot <- board %>% pin_read(spot)
resp_spot <- req_spot %>% req_perform()
scrape_best_time(resp_spot)
scrape_best_time(html)
html <- resp_spot %>% resp_body_html()
scrape_best_time(html = resp_body_html(resp_spot))
tibble::tibble(best_month, best_season)
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
country_spot <- board %>% pin_read("country_spot_1")
country_spot <- sanitize_spot(country_spot)
req <- request(base_url())
spot <- "Alfonsina"
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
board %>% pin_write(req_spot, spot)
req_spot <- board %>% pin_read(spot)
resp_spot <- req_spot %>% req_perform()
scrape_best_time(html = resp_body_html(resp_spot))
html <- resp_body_html(resp_spot)
scrape_best_time(html)
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
html_spot <- resp_body_html(resp_spot)
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(
names_from = condition,
values_from = percent
) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot)
scrape_best_time(html)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot) %>%
dplyr::bind_cols(scrape_best_time(html))
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot) %>%
dplyr::bind_cols(scrape_best_time(html))
best_conditions <- tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot)
best_time <- scrape_best_time(html_spot)
dplyr::bind_cols(best_time, best_conditions)
scrape_best_conditions <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
best_conditions <- tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot)
}
scrape_best_conditions(html_spot)
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot)
scrape_best_conditions <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot)
}
scrape_best_conditions(html_spot)
best_conditions <- scrape_best_conditions(html_spot)
best_time <- scrape_best_time(html_spot)
best_time <- dplyr::bind_cols(
scrape_best_conditions(html_spot), scrape_best_time(html_spot)
)
best_time
use_r("utils")
board <- pins::board_folder(data_raw("requests"))
board %>% pins::pin_write(resp_spot, spot)
resp_spot <- board %>% pins::pin_read(spot)
source("~/git/surfcast/data-raw/cache-spot-guide.R", echo=TRUE)
source("~/git/surfcast/data-raw/cache-country_spot.R", echo=TRUE)
pin_country_spot_page <- function(n) {
breaks_req <- request_breaks_page(n = n)
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
enframe_country_spot <- function(breaks_resp) {
breaks_htlm <- breaks_resp %>%
resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
tibble::tibble(country, spot)
}
country_spot <- enframe_country_spot(breaks_resp)
board %>% pin_write(country_spot, glue::glue("country_spot_{n}"))
}
pin_country_spot_page(1)
# https://www.surf-forecast.com/breaks
library(fs)
library(httr2)
library(pins)
req <- request(base_url())
# # TODO Implement cache locally? e.g. request only if the data doesn't exist and
# # `update = TRUE`
# # cache-control: max-age=0, private, must-revalidate
# cache <- fs::dir_create(data_raw("cache_httr2"))
# req <- req %>% req_cache(cache, debug = TRUE)
request_breaks_page <- function(n) {
req %>%
req_url_path_append("breaks") %>%
req_url_query(page = n)
}
pin_country_spot_page <- function(n) {
breaks_req <- request_breaks_page(n = n)
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
enframe_country_spot <- function(breaks_resp) {
breaks_htlm <- breaks_resp %>%
resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
tibble::tibble(country, spot)
}
country_spot <- enframe_country_spot(breaks_resp)
board %>% pin_write(country_spot, glue::glue("country_spot_{n}"))
}
pin_country_spot_page(1)
pin_country_spot_page(2)
board
board %>% pins::pin_read("country_spot_2")
board %>% pins::pin_read("country_spot_1")
progress::progress_bar$new()
total <- 27
progress::progress_bar$new(total = total)
pb <- progress::progress_bar$new(total = total)
seq_len(total)
source("~/git/surfcast/data-raw/cache-country_spot.R", echo=TRUE)
n <- 27
breaks_req <- request_breaks_page(n = n)
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
enframe_country_spot <- function(breaks_resp) {
breaks_htlm <- breaks_resp %>%
resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
tibble::tibble(country, spot)
}
country_spot <- enframe_country_spot(breaks_resp)
country_spot
n <- 28
breaks_req <- request_breaks_page(n = n)
breaks_resp <- breaks_req %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pin_write(breaks_resp, "breaks", type = "qs")
breaks_resp <- board %>% pin_read("breaks")
enframe_country_spot <- function(breaks_resp) {
breaks_htlm <- breaks_resp %>%
resp_body_html()
country <- breaks_htlm %>%
rvest::html_elements(".rem") %>%
rvest::html_text2()
spot <- breaks_htlm %>%
rvest::html_elements(".list_table a") %>%
rvest::html_text2()
tibble::tibble(country, spot)
}
country_spot <- enframe_country_spot(breaks_resp)
country_spot
nrow(country_spot)
nrow(country_spot) == 0L
identical(nrow(country_spot))
identical(nrow(country_spot), 0)
identical(nrow(country_spot), 0l)
identical(nrow(country_spot), 0L)
invalid_page <- identical(nrow(country_spot), 0L)
invalid_page
invalid_page
source("~/git/surfcast/data-raw/cache_country_spot_page.R", echo=TRUE)
source("~/git/surfcast/data-raw/cache_country_spot_page.R", echo=TRUE)
source("~/git/surfcast/data-raw/cache_country_spot_page.R", echo=TRUE)
board <- board_folder(data_raw("cache_pins"))
board
board$path
fs::dir_ls(board$path)
fs::path_file(fs::dir_ls(board$path))
fs::path_file(fs::dir_ls(board$path, regexp = "$country_spot_"))
fs::path_file(fs::dir_ls(board$path, regexp = "^country_spot_"))
fs::path_file(fs::dir_ls(board$path, regexp = "country_spot_"))
pins <- fs::path_file(fs::dir_ls(board$path, regexp = "country_spot_"))
pins
nms <- fs::path_file(fs::dir_ls(board$path, regexp = "country_spot_"))
nms
nms <- fs::path_file(fs::dir_ls(board$path, regexp = "country_spot_"))
nms
dfs <- purrr::map(~pins::pin_read(board, .x))
board
dfs <- purrr::map(nms, ~pins::pin_read(board, .x))
dfs
dfs <- purrr::map_df(nms[13], ~pins::pin_read(board, .x))
dfs
dfs <- purrr::map_df(nms[1:3], ~pins::pin_read(board, .x))
dfs
dfs <- purrr::map_df(nms[1:3], ~pins::pin_read(board, .x), .id = "page")
dfs
dfs %>% tail()
dfs <- purrr::map_df(nms, ~pins::pin_read(board, .x), .id = "page")
country_spot <- purrr::map_df(nms, ~pins::pin_read(board, .x), .id = "page")
usethis::use_data(country_spot, overwrite = TRUE)
source("~/git/surfcast/data-raw/country_spot.R", echo=TRUE)
styler:::style_active_file()
board <- board_folder(data_raw("cache_pins"))
pins <- fs::path_file(fs::dir_ls(board$path, regexp = "country_spot_"))
country_spot <- purrr::map_df(pins, ~ pins::pin_read(board, .x), .id = "page")
usethis::use_data(country_spot, overwrite = TRUE)
source("~/git/surfcast/data-raw/country_spot.R", echo=TRUE)
devtools::load_all()
country_spot %>%
filter(country == "Argentina")
library(dplyr)
devtools::load_all()
country_spot %>%
filter(country == "Argentina")
country_spot %>%
filter(country == "Argentina") %>%
sanitize_spot()
country_spot %>%
filter(country == "Argentina") %>%
sanitize_spot() %>%
pull(stot)
country_spot %>%
filter(country == "Argentina") %>%
sanitize_spot() %>%
pull(spot)
argentina_spots <- country_spot %>%
filter(country == "Argentina") %>%
sanitize_spot() %>%
pull(spot)
argentina_spots
use_data(
argentina_spots,
overwrite = TRUE
)
sane_spots <- country_spot %>%
sanitize_spot() %>%
argentina_spots <- sane_spots %>%
sanitize_spot() %>%
filter(country == "Argentina") %>%
pull(spot)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
brazil_spots
pull_spots <- function(sane_spots, country, spot) {
argentina_spots <- sane_spots %>% filter(country == "Argentina") %>% pull(spot)
}
pull_spots <- function(data) {
argentina_spots <- data %>%
filter(country == "Argentina") %>%
pull(spot)
}
data %>%
filter(country == country) %>%
pull(spot)
pull_spots <- function(data) {
data %>%
filter(country == country) %>%
pull(spot)
}
pull_spots <- function(data, country = "Argentina") {
data %>%
filter(country == country) %>%
pull(spot)
}
pull_spots <- function(data, country = "Argentina") {
data %>% filter(country == country) %>% pull(spot)
}
pull_spots <- function(data, country = "Argentina") {
data %>% filter(country == country) %>% pull(spot) %>% unique()
}
argentina_spots <- sane_spots %>% pull_spots("Argentina")
brazil_spots <- sane_spots %>% pull_spots("Brazil")
uruguay_spots <- sane_spots %>% pull_spots("Uruguay")
argentina_spots
brazil_spots
uruguay_spots
argentina_spots <- sane_spots %>% pull_spots("Argentina")
brazil_spots <- sane_spots %>% pull_spots("Brazil")
uruguay_spots <- sane_spots %>% pull_spots("Uruguay")
argentina_spots
sane_spots <- country_spot %>% sanitize_spot()
pull_spots <- function(data, country = "Argentina") {
data %>% filter(country == country) %>% pull(spot) %>% unique()
}
argentina_spots <- sane_spots %>% pull_spots("Argentina")
argentina_spots
sane_spots
pull_spots <- function(data, .country = "Argentina") {
data %>% filter(.data$country == .country) %>% pull(spot) %>% unique()
}
argentina_spots <- sane_spots %>% pull_spots("Argentina")
argentina_spots
brazil_spots <- sane_spots %>% pull_spots("Brazil")
brazil_spots
uruguay_spots <- sane_spots %>% pull_spots("Uruguay")
uruguay_spots
source("~/git/surfcast/specific_spots.R", echo=TRUE)
source("~/git/surfcast/specific_spots.R", echo=TRUE)
cache_spot_guide <- function(spot) {
req <- request(base_url())
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
resp_spot <- req_spot %>% req_perform()
board <- pins::board_folder(data_raw("requests"))
board %>% pins::pin_write(resp_spot, spot)
}
cache_spot_guide <- function(spot) {
req <- request(base_url())
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
resp_spot <- req_spot %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>%
pins::pin_write(resp_spot, spot, type = "qs")
}
argentina_spots[1]
argentina_spots[1:2]
spots <- argentina_spots[1:2]
progress::progress_bar$new(total = length(spots))
spots <- argentina_spots[1:2]
spots <- argentina_spots[1:2]
progress::progress_bar$new(total = length(spots))
for (i in seq_along(spots)) {
pb$tick()
cache_spot_guide(spot[[i]])
}
progress::progress_bar$new(total = length(spots))
pb <- progress::progress_bar$new(total = length(spots))
for (i in seq_along(spots)) {
pb$tick()
cache_spot_guide(spot[[i]])
}
source("~/git/surfcast/data-raw/cache_spot_guide.R", echo=TRUE)
library(httr2)
library(pins)
library(dplyr)
devtools::load_all(".")
library(httr2)
library(pins)
library(dplyr)
scrape_best_time <- function(html) {
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_conditions <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent) %>%
dplyr::mutate(spot = spot) %>%
dplyr::relocate(spot)
}
cache_spot_guide <- function(spot) {
req <- request(base_url())
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
resp_spot <- req_spot %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>%
pins::pin_write(resp_spot, spot, type = "qs")
}
spots <- argentina_spots[1:2]
pb <- progress::progress_bar$new(total = length(spots))
spots[[i]]
source("~/git/surfcast/data-raw/cache_spot_guide.R", echo=TRUE)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
devtools::load_all(".")
source("~/git/surfcast/data-raw/cache_spot_guide.R", echo=TRUE)
source("~/git/surfcast/data-raw/cache_spot_guide.R", echo=TRUE)
source("~/git/surfcast/data-raw/cache_spot_guide.R", echo=TRUE)
argentina_spots
source("~/git/surfcast/data-raw/cache_spot_guide_argentina.R", echo=TRUE)
styler:::style_active_file()
source("~/git/surfcast/data-raw/cache_spot_guide_argentina.R", echo=TRUE)
source("~/git/surfcast/data-raw/cache_spot_guide_argentina.R", echo=TRUE)
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
fs::dir_ls(board$path)
fs::path_file(fs::dir_ls(board$path))
fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
pins_name <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
pins_name
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
pin_names
spots <- purrr::map(pin_names, !pins::pin_read(board, .x))
spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
spots
resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
best_conditions <- function(resp_spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_conditions(html_spot), scrape_best_time(html_spot)
)
}
best_conditions <- resp_spots %>%
purrr::map_df(best_conditions)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
devtools::load_all(".")
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
condition
percent
devtools::load_all(".")
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
devtools::load_all(".")
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
best_conditions
best_conditions
best_conditions <- resp_spots %>%
purrr::map_df(best_conditions, .id = pin_names)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
best_conditions <- resp_spots %>%
purrr::map_df(best_conditions, .id = "spot")
best_conditions
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
best_conditions <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_conditions(html_spot), scrape_best_time(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
devtools::load_all(".")
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
html_spot
.spot
best_conditions <- purrr::map2_df(resp_spots, pin_names, best_conditions)
devtools::load_all(".")
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
best_conditions <- purrr::map2_df(
resp_spots, gsub("spot_guide_", "", pin_names),
best_conditions
)
best_conditions
gsub("spot_guide_", "", pin_names)
resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
best_conditions <- purrr::map2_df(
resp_spots, gsub("spot_guide_", "", pin_names),
best_conditions
)
resp_spots
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
spots <- uruguay_spots
library(progress)
library(httr2)
library(fs)
library(pins)
cache_spot_guide <- function(spot) {
req <- request(base_url())
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
resp_spot <- req_spot %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pins::pin_write(resp_spot, paste0("spot_guide_", spot), type = "qs")
}
spots <- uruguay_spots
spots <- uruguay_spots
pb <- progress::progress_bar$new(total = length(spots))
for (i in seq_along(spots)) {
pb$tick()
try(cache_spot_guide(spots[[i]]))
}
spots <- brazil_spots
pb <- progress::progress_bar$new(total = length(spots))
for (i in seq_along(spots)) {
pb$tick()
try(cache_spot_guide(spots[[i]]))
}
devtools::load_all(".")
best_conditions
xxx <- dplyr::left_join(sanitize_spot(country_spot), best_conditions)
xxx <- dplyr::left_join(sanitize_spot(country_spot), best_conditions, by = "spot")
xxx <- dplyr::left_join(sanitize_spot(country_spot), best_conditions, by = "spot")
View(xxx)
sanitize_spot(country_spot)
sanitize_spot(country_spot)
spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% c("Argentina", "Brazil", "Uruguay"))
xxx <- dplyr::left_join(spots, best_conditions, by = "spot")
View(xxx)
spots
spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% c("Argentina", "Brazil", "Uruguay"))
best_conditions
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot), scrape_best_time(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
best_conditions <- purrr::map2_df(
resp_spots, gsub("spot_guide_", "", pin_names),
best_stats
)
best_conditions
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% c("Argentina", "Brazil", "Uruguay"))
best <- dplyr::left_join(supported_spots, best_conditions, by = "spot")
best
View(best)
best_conditions <- dplyr::left_join(
supported_spots, best_conditions, by = "spot"
)
usethis::use_data(best_conditions, overwrite = TRUE)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
source("~/git/surfcast/data-raw/use_best_conditions.R", echo=TRUE)
usa_spots <- sane_spots %>% pull_spots("United States")
library(dplyr)
devtools::load_all()
sane_spots <- country_spot %>% sanitize_spot()
pull_spots <- function(data, .country = "Argentina") {
data %>%
filter(.data$country == .country) %>%
pull(.data$spot) %>%
unique()
}
usa_spots <- sane_spots %>% pull_spots("United States")
usa_spots
use_data(
# argentina_spots,
# brazil_spots,
# uruguay_spots,
usa_spots,
overwrite = TRUE
)
devtools::load_all(".")
spots <- usa_spots
library(progress)
library(httr2)
library(fs)
library(pins)
cache_spot_guide <- function(spot) {
req <- request(base_url())
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
resp_spot <- req_spot %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pins::pin_write(resp_spot, paste0("spot_guide_", spot), type = "qs")
}
# FIXME: Get links from the underlying HTML not the spot name.
# # Bad: https://www.surf-forecast.com/breaks/La-Perla
# # Good: https://www.surf-forecast.com/breaks/La-Perla-1-Mar-del-Plata
spots <- argentina_spots
pb <- progress::progress_bar$new(total = length(spots))
for (i in seq_along(spots)) {
pb$tick()
try(cache_spot_guide(spots[[i]]))
}
devtools::load_all(".")
library(progress)
library(httr2)
library(fs)
library(pins)
cache_spot_guide <- function(spot) {
req <- request(base_url())
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
resp_spot <- req_spot %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pins::pin_write(resp_spot, paste0("spot_guide_", spot), type = "qs")
}
spots <- usa_spots
pb <- progress::progress_bar$new(total = length(spots))
for (i in seq_along(spots)) {
pb$tick()
try(cache_spot_guide(spots[[i]]))
}
source("~/git/surfcast/data-raw/country_spot.R", echo=TRUE)
View(country_spot)
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot), scrape_best_time(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
best_conditions <- purrr::map2_df(
resp_spots, gsub("spot_guide_", "", pin_names),
best_stats
)
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% c("Argentina", "Brazil", "Uruguay", "United States"))
supported_spots
best_conditions <- dplyr::left_join(
supported_spots, best_conditions, by = "spot"
)
best_conditions <- best_conditions %>%
dplyr::arrange(country, month, spot)
best_conditions
best_conditions <- best_conditions %>%
dplyr::arrange(country, best_month, spot)
best_conditions
best_conditions <- best_conditions %>%
dplyr::arrange(country, best_month, spot)
best_conditions
qs::qsave(best_conditions, data_raw("best_conditions.qs"))
best_conditions %>% dplyr::filter(!is.na(clean))
best_conditions <- best_conditions %>% dplyr::filter(!is.na(clean))
best_conditions <- best_conditions %>% dplyr::filter(!is.na(clean))
usethis::use_data(best_conditions, overwrite = TRUE)
View(best_conditions)
best_conditions
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
best_conditions
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::select(-.data$page)) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::select(-.data$page) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
best_conditions
usethis::use_data(best_conditions, overwrite = TRUE)
devtools::load_all(".")
library(surfcast)
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::select(-.data$page) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
best_conditions
best_conditions <- best_conditions %>%
qs::qsave(best_conditions, data_raw("best_conditions.qs"))
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::select(-.data$page) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
# dplyr::select(-.data$page) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
best_conditions
months()
month.name
best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::select(-.data$page) %>%
dplyr::mutate(best_month = factor(best_month, levels = month.name))
best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
# dplyr::select(-.data$page) %>%
dplyr::mutate(best_month = factor(best_month, levels = month.name))
month.name
best_conditions
best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
# dplyr::select(-.data$page) %>%
dplyr::mutate(best_month = factor(best_month, levels = tolower(month.name)))
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
# dplyr::select(-.data$page) %>%
dplyr::mutate(best_month = factor(best_month, levels = tolower(month.name))) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
best_conditions
usethis::use_data(best_conditions, overwrite = TRUE)
devtools::load_all(".")
library(surfcast)
unlink("README_cache", recursive = TRUE)
source("~/git/surfcast/data-raw/best_conditions.R", echo=TRUE)
html_spot <- resp_body_html(resp_spot)
html_spot
html_spot %>%
rvest::html_elements("tbody~ tbody td:nth-child(1)") %>%
rvest::html_text2()
scrape_best_time(html_spot)
scrape_best_stats(html_spot)
reliability <- html_spot %>%
rvest::html_elements("tbody~ tbody td:nth-child(1)") %>%
rvest::html_text2()
tibble::tibble(reliability)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_reliability(html_spot)
)
scrape_reliability <- function(html_spot, rvest, html_elements, html_text2) {
reliability <- html_spot %>%
rvest::html_elements("tbody~ tbody td:nth-child(1)") %>%
rvest::html_text2()
tibble::tibble(reliability)
}
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_reliability(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_reliability(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
type <- html_spot %>%
rvest::html_elements("td") %>%
rvest::html_text2()
type
html_spot %>%
rvest::html_elements("tbody~ tbody td:nth-child(2)") %>%
# rvest::html_elements("td") %>%
rvest::html_text2()
html_spot %>%
rvest::html_elements("tbody~ tbody td:nth-child(1)") %>%
# rvest::html_elements("td") %>%
rvest::html_text2()
html_spot %>%
rvest::html_elements("tbody~ tbody td") %>%
# rvest::html_elements("td") %>%
rvest::html_text2()
html_spot %>%
rvest::html_elements("tbody") %>%
# rvest::html_elements("td") %>%
rvest::html_text2()
html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_text2()
html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_text2()
html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
info[[1]]
info[[2]]
info[[3]]
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
tibble::tibble(type = info[[1]], rating = character(0), reliability = info[[3]])
tibble::tibble(type = info[[1]], rating = "", reliability = info[[3]])
source("~/git/surfcast/data-raw/best_conditions.R", echo=TRUE)
source("~/git/surfcast/data-raw/best_conditions.R", echo=TRUE)
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
best_conditions <- purrr::map2_df(
resp_spots[1], gsub("spot_guide_", "", pin_names),
best_stats
)
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
best_conditions <- purrr::map2_df(
resp_spots[1:3], gsub("spot_guide_", "", pin_names[1:3]),
best_stats
)
best_conditions
source("~/git/surfcast/data-raw/best_conditions.R", echo=TRUE)
use_tidy_description()
source("~/git/surfcast/data-raw/best_conditions.R", echo=TRUE)
source("~/git/surfcast/data-raw/best_conditions.R", echo=TRUE)
board %>% pin_write(resp_spots, "resp_spots")
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
message(.spot)
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
# Or
board %>% pin_write(resp_spots, "resp_spots")
# Or
qs::qsave(resp_spots, data_raw("best_conditions_resp_spots.qs"))
# Or
path <- data_raw("best_conditions_resp_spots.qs")
resp_spots <- qs::qread(path)
path <- data_raw("best_conditions_resp_spots.qs")
qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
resp_spots
devtools::load_all(".")
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
message(.spot)
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
path <- data_raw("best_conditions_resp_spots.qs")
qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
# Or
# board <- board_folder(fs::dir_create(data_raw("cache_pins")))
# pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
best_conditions <- purrr::map2_df(
resp_spots, gsub("spot_guide_", "", pin_names),
best_stats
)
as.list(pin_names)
setNames(as.list(pin_names))
rlang::set_names(as.list(pin_names))
best_conds <- rlang::set_names(as.list(pin_names))
best_conds
i <- 3
best_conds[[i]]
resp_spots[[i]]
gsub("spot_guide_", "", pin_names))[[i]]
pin_names
gsub("spot_guide_", "", pin_names)[[i]]
best_conds <- rlang::set_names(as.list(pin_names[1:3]))
best_conds
for (i in seq_along(pin_names)) {
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
best_conds <- rlang::set_names(as.list(pin_names[1:3]))
for (i in seq_along(pin_names)) {
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
message(gsub("spot_guide_", "", pin_names)[[i]])
best_conds <- rlang::set_names(as.list(pin_names[1:3]))
for (i in seq_along(pin_names)) {
message(gsub("spot_guide_", "", pin_names)[[i]])
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
best_conds
devtools::load_all(".")
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
best_conds <- rlang::set_names(as.list(pin_names[1:3]))
best_conds
i <- 1
message(gsub("spot_guide_", "", pin_names)[[i]])
best_conds
pin_names[[i]])
message(pin_names[[i]])
best_conds[[i]]
resp_spots[[i]]
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
best_conds
best_conds <- rlang::set_names(as.list(pin_names[1:3]))
progress::progress_bar$new(total = length(best_conds))
for (i in seq_along(pin_names)) {
pb$tick()
message(pin_names[[i]])
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
pb <- progress::progress_bar$new(total = length(best_conds))
for (i in seq_along(pin_names)) {
pb$tick()
message(pin_names[[i]])
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
best_conds <- rlang::set_names(as.list(pin_names[1:3]))
pb <- progress::progress_bar$new(total = length(best_conds))
for (i in seq_along(pin_names)) {
pb$tick()
message(pin_names[[i]])
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
best_conds <- rlang::set_names(as.list(pin_names[1:3]))
pb <- progress::progress_bar$new(total = length(best_conds))
for (i in seq_along(pin_names)) {
pb$tick()
message(pin_names[[i]])
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
length(best_conds)
seq_along(pin_names)
best_conds <- rlang::set_names(as.list(pin_names[1:3]))
pb <- progress::progress_bar$new(total = length(best_conds))
for (i in seq_along(pin_names[1:3])) {
pb$tick()
message(pin_names[[i]])
best_conds[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
best_conditions <- rlang::set_names(as.list(pin_names[1:3]))
best_conditions <- rlang::set_names(as.list(pin_names[1:3]))
pb <- progress::progress_bar$new(total = length(best_conditions[1:3]))
for (i in seq_along(pin_names[1:3])) {
pb$tick()
message(pin_names[[i]])
best_conditions[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
best_conditions <- purrr::reduce(dplyr::bind_rows)
best_conditions
best_conditions <- purrr::reduce(best_conditions, dplyr::bind_rows)
best_conditions
best_conditions <- rlang::set_names(as.list(pin_names))
pb <- progress::progress_bar$new(total = length(best_conditions))
for (i in seq_along(pin_names)) {
pb$tick()
message(pin_names[[i]])
best_conditions[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
best_xxxxx <- purrr::reduce(best_conditions, dplyr::bind_rows)
best_xxxxx
best_conditions <- purrr::reduce(best_conditions, dplyr::bind_rows)
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% supported_countries())
devtools::load_all(".")
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% supported_countries())
devtools::load_all(".")
supported_countires()
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% supported_countries())
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% supported_countries())
devtools::load_all(".")
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% supported_countries())
supported_spots
best_conditions <- dplyr::left_join(
supported_spots, best_conditions, by = "spot"
)
best_conditions
best_conditions <- best_conditions %>%
qs::qsave(best_conditions, data_raw("best_conditions.qs"))
best_conditions
best_conditions <- dplyr::left_join(
supported_spots, best_conditions, by = "spot"
)
qs::qsave(best_conditions, data_raw("best_conditions.qs"))
best_conditions <- best_conditions %>% dplyr::select(-.data$page)
best_conditions
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% supported_countries())
best_conditions <- dplyr::left_join(
supported_spots, best_conditions, by = "spot"
)
best_conditions
best_conditions <- dplyr::left_join(
supported_spots, best_conditions, by = "spot"
)
qs::qsave(best_conditions, data_raw("best_conditions.qs"))
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::mutate(best_month = factor(best_month, levels = tolower(month.name))) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
best_conditions
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
#
# best_conditions <- purrr::map2_df(
#   resp_spots, gsub("spot_guide_", "", pin_names),
#   best_stats
# )
best_cond <- rlang::set_names(as.list(pin_names))
pb <- progress::progress_bar$new(total = length(best_conditions))
for (i in seq_along(pin_names)) {
pb$tick()
message(pin_names[[i]])
best_cond[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
best_conditions <- purrr::reduce(best_cond, dplyr::bind_rows)
devtools::load_all(".")
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
#
# best_conditions <- purrr::map2_df(
#   resp_spots, gsub("spot_guide_", "", pin_names),
#   best_stats
# )
best_cond <- rlang::set_names(as.list(pin_names))
pb <- progress::progress_bar$new(total = length(best_conditions))
for (i in seq_along(pin_names)) {
pb$tick()
message(pin_names[[i]])
best_cond[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
best_conditions <- purrr::reduce(best_cond, dplyr::bind_rows)
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
#
# best_conditions <- purrr::map2_df(
#   resp_spots, gsub("spot_guide_", "", pin_names),
#   best_stats
# )
best_cond <- rlang::set_names(as.list(pin_names))
pb <- progress::progress_bar$new(total = length(best_cond))
for (i in seq_along(pin_names)) {
pb$tick()
message(pin_names[[i]])
best_cond[[i]] <- best_stats(
resp_spots[[i]],
gsub("spot_guide_", "", pin_names)[[i]]
)
}
best_conditions <- purrr::reduce(best_cond, dplyr::bind_rows)
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% supported_countries())
supported_spots
best_conditions <- dplyr::left_join(
supported_spots, best_conditions, by = "spot"
)
best_conditions
qs::qsave(best_conditions, data_raw("best_conditions.qs"))
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::mutate(best_month = factor(best_month, levels = tolower(month.name))) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, best_season, best_month, clean)
usethis::use_data(best_conditions, overwrite = TRUE)
best_conditions
best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::mutate(best_month = factor(best_month, levels = tolower(month.name))) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, best_season, best_month, reliability, rating, clean)
devtools::load_all(".")
best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::mutate(best_month = factor(best_month, levels = tolower(month.name))) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, best_season, best_month, reliability, rating, clean) %>% View()
best_conditions <- best_conditions %>%
dplyr::filter(!is.na(clean)) %>%
dplyr::mutate(best_month = factor(best_month, levels = tolower(month.name))) %>%
dplyr::arrange(country, best_month, spot) %>%
dplyr::relocate(country, spot, type, best_season, best_month, reliability, rating, clean)
usethis::use_data(best_conditions, overwrite = TRUE)
library(surfcast)
library(surfcast)
library(tibble)
best_conditions <- purrr::reduce(best_cond, dplyr::bind_rows)
supported_spots <- country_spot %>%
sanitize_spot() %>%
dplyr::filter(country %in% supported_countries())
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>% purrr::map(1) %>% purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_stats <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
#
# best_conditions <- purrr::map2_df(
#   resp_spots, gsub("spot_guide_", "", pin_names),
#   best_stats
# )
use_r("run_app")
library(shiny)
source("~/git/surfcast/R/run_app.R", echo=TRUE)
runApp('R/run_app.R')
best_conditions
devtools::load_all(".")
library(surfcast)
best_conditions
runApp('R/run_app.R')
use_package("shiny")
use_package("pkgload")
use_import_from("shiny")
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
?shiny::a()
?shiny::a()
shiny::a("h", href = "a")
source("~/git/surfcast/R/run_app.R", echo=TRUE)
source("~/git/surfcast/R/run_app.R", echo=TRUE)
run_app()
source("~/git/surfcast/R/run_app.R", echo=TRUE)
run_app()
?shiny::em
run_app()
devtools::load_all(".")
run_app()
run_app()
styler:::style_active_file()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>%
purrr::map(1) %>%
purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~ gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_data <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
pin_names
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
path
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
resp_spots
library(rvest)
library(tibble)
library(purrr)
library(dplyr)
library(janitor)
library(pins)
library(httr2)
devtools::load_all()
scrape_info <- function(html_spot, rvest, html_elements, html_text2) {
info <- html_spot %>%
rvest::html_elements("tbody") %>%
rvest::html_elements("tr") %>%
rvest::html_elements("td") %>%
rvest::html_text2()
tibble::tibble(type = info[[1]], rating = info[[2]], reliability = info[[3]])
}
scrape_best_time <- function(html) {
best_time <- html %>%
rvest::html_elements(".guide-page__best-month") %>%
rvest::html_text2()
best_month <- gsub("(.*)(Best Season: )(.*)", "\\1", best_time)
best_season <- gsub("(.*)(Best Season: )(.*)", "\\3", best_time)
tibble::tibble(best_month, best_season)
}
scrape_best_stats <- function(html_spot) {
spot_stats <- html_spot %>%
rvest::html_elements(".guide-page__surfinfo") %>%
rvest::html_text2() %>%
strsplit("\n")
condition <- spot_stats %>%
purrr::map(1) %>%
purrr::map_chr(janitor::make_clean_names)
percent <- spot_stats %>%
purrr::map(2) %>%
purrr::map(~ gsub("%", "", .x)) %>%
as.integer()
tibble::tibble(condition, percent) %>%
tidyr::pivot_wider(names_from = condition, values_from = percent)
}
best_data <- function(resp_spot, .spot) {
html_spot <- resp_body_html(resp_spot)
dplyr::bind_cols(
scrape_best_stats(html_spot),
scrape_best_time(html_spot),
scrape_info(html_spot)
) %>%
mutate(spot = .spot) %>%
relocate(spot)
}
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
pin_names <- fs::path_file(fs::dir_ls(board$path, regexp = "spot_guide_"))
# resp_spots <- purrr::map(pin_names, ~pins::pin_read(board, .x))
path <- data_raw("best_conditions_resp_spots.qs")
# qs::qsave(resp_spots, path)
resp_spots <- qs::qread(path)
devtools::load_all(".")
cache_spot_guide <- function(spot) {
browser()
req <- request(base_url())
req_spot <- req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
resp_spot <- req_spot %>% req_perform()
board <- board_folder(fs::dir_create(data_raw("cache_pins")))
board %>% pins::pin_write(resp_spot, paste0("spot_guide_", spot), type = "qs")
}
# FIXME: Get links from the underlying HTML not the spot name.
# # Bad: https://www.surf-forecast.com/breaks/La-Perla
# # Good: https://www.surf-forecast.com/breaks/La-Perla-1-Mar-del-Plata
spots <- argentina_spots
spots
spots <- "Off-the-wall"
spots <- "Off-the-wall"  # FIXME
spots
seq_along(spots)
i <- 1
cache_spot_guide(spots[[i]])
req <- request(base_url())
req
req %>%
req_url_path_append("breaks")
req %>%
req_url_path_append("breaks") %>%
req_url_path_append(spot)
library(pins)
board
pins::pin_read("country_spot_1")
pins::pin_read(board, "country_spot_1")
devtools::load_all(".")
source("~/git/surfcast/data-raw/03_cache_all_spot_guides.R", echo=TRUE)
devtools::load_all(".")
source("~/git/surfcast/data-raw/04_use_best_conditions.R", echo=TRUE)
devtools::load_all(".")
run_app()
library(surfcast)
use_badge("experimental")
use_lifecycle_badge("experimental")
devtools::install_github("maurolepore/surfcast")
devtools::load_all(".")
paste(supported_countries())
paste(supported_countries(), collapse = ", ")
run_app()
devtools::load_all(".")
run_app()
show_supported_countries <- function() {
p("Supported countries: ", paste(supported_countries(), collapse = ", "))
}
source("~/git/surfcast/R/utils.R", echo=TRUE)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
surfcast:::supported_countries()
source("~/git/surfcast/data-raw/01_cache_all_breaks.R", echo=TRUE)
source("~/git/surfcast/data-raw/02_use_country_spot.R", echo=TRUE)
devtools::load_all(".")
source("~/git/surfcast/data-raw/02_use_country_spot.R", echo=TRUE)
country_spot
source("~/git/surfcast/data-raw/03_cache_all_spot_guides.R", echo=TRUE)
source("~/git/surfcast/data-raw/04_use_best_conditions.R", echo=TRUE)
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
run_app()
run_app()
devtools::load_all(".")
run_app()
devtools::load_all(".")
runa_app()
devtools::load_all(".")
run_app()
library(surfcast)
document()
run_app()
library(surfcast)
devtools::load_all(".")
library(surfcast)
run_app()
devtools::load_all(".")
run_app()
library(surfcast)
unlink("README_cache", recursive = TRUE)
library(pastax.data)
library(pastax.data)
europages_automobile$company_description
unique(europages_automobile$company_description)
library(tidyverse)
europages_automobile %>%
count(company_description)
europages_automobile %>%
filter(company_description != "")
europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information)
europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information)
europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information) %>%
mutate(same = identical(company_description, information))
europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information) %>%
View()
europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information) %>%
group_by(row_number()) %>%
mutate(same = identical(company_description, information))
europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information) %>%
group_by(row_number()) %>%
mutate(same = identical(company_description, information))
europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information) %>%
group_by(row_number()) %>%
mutate(same = identical(company_description, information)) %>% View()
europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information) %>%
group_by(row_number()) %>%
mutate(same = identical(company_description, information)) %>%
filter(!same)
out <- europages_automobile %>%
filter(company_description != "") %>%
select(company_description, information) %>%
group_by(row_number()) %>%
mutate(same = identical(company_description, information)) %>%
filter(!same)
out[1]
out[2]
out[1][[1]]
out[1][[1]]
out[2][[1]][[1]]
out[1][[1]][[1]]
out[2][[1]][[1]]
out[1][[1]][[10]]
out[2][[1]][[10]]
europages_automobile %>%
filter(company_description == "") %>%
select(company_description, information)
